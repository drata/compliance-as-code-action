{"version":3,"file":"actionService.js","sourceRoot":"","sources":["../../src/services/actionService.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from \"@src/apis/api\";\nimport { FileService } from \"./fileService\";\nimport { ActionConfig } from \"src/models/actionConfig\";\nimport * as core from \"@actions/core\";\nimport { PostPipelinesScanRequest } from \"@src/apis/models/postPipelineScanRequest\";\nimport { PipelineResults } from \"@src/apis/models/pipelineResults\";\nimport { DesignGap } from \"../apis/models/designGap\";\nimport { PipelineInfo } from \"../models/pipelineInfo\";\n\nexport class ActionService {\n  private configParams: ActionConfig | undefined;\n  private runRequestId: string = \"\";\n  private includeFileExtensions: string =\n    \".*.(tf|tfvar|terraform|tf.json|json|yaml|yml)\";\n\n  api: Api;\n\n  sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  public constructor(configParams: ActionConfig) {\n    this.api = new Api(configParams);\n  }\n\n  public async prepare(): Promise<this> {\n    let response = await this.api?.getClientUploadStorageDetails();\n    core.info(JSON.stringify(response));\n\n    if (response != null || response != undefined) {\n      let fileService = new FileService();\n      await fileService.zipFilesFromWorkspace(\n        process.env.GITHUB_WORKSPACE || \"\",\n        response.zipName,\n        this.includeFileExtensions,\n      );\n\n      let uploadResponse = await this.api?.uploadIaCToS3(response);\n\n      core.info(\"Files uploaded.\");\n      core.info(`${uploadResponse}`);\n    }\n\n    return this;\n  }\n\n  public async queueValidation(pipelineInfo: PipelineInfo): Promise<boolean> {\n    // let api = new Api();\n    let iacPipelineScanRequest: PostPipelinesScanRequest = {\n      branchName: pipelineInfo.branchName,\n      sourceBranchName: pipelineInfo.sourceBranchName,\n      destinationBranchName: pipelineInfo.destinationBranchName,\n      commitHash: pipelineInfo.commitHash,\n      repositoryName: pipelineInfo.repositoryName,\n      repositoryOwner: pipelineInfo.repositoryOwner,\n      repositoryId: pipelineInfo.repositoryId,\n      runId: pipelineInfo.runId,\n      vendorRunId: pipelineInfo.vendorRunId,\n      trigger: pipelineInfo.trigger,\n      minimumSeverity: pipelineInfo.minimumSeverity,\n      runInitiatedBy: pipelineInfo.runInitiatedBy,\n    };\n\n    return await this.api?.postIaCScanValidation(iacPipelineScanRequest);\n  }\n\n  public async checkIfResultsAreAvailable(\n    timeoutInSeconds: number,\n    runId: string,\n  ): Promise<PipelineResults> {\n    let results: PipelineResults = { designGaps: [] };\n    let retries = timeoutInSeconds / 5;\n    core.info(`Waiting for results with ${retries} retries...`);\n\n    for (let retry = 0; retry < retries; retry++) {\n      core.info(` Retry ${retry + 1}: Checking for results...`);\n      await this.sleep(5000); // 5 seconds wait between calls\n      results = await this.api?.checkForResults(runId);\n\n      if (results.designGaps?.length != 0) {\n        break;\n      }\n    }\n    return results;\n  }\n\n  public publishResults(\n    maxSeverity: string,\n    results: PipelineResults,\n  ): boolean {\n    let severityThreshold = 0;\n    let severityMap = [\"None\", \"Low\", \"Moderate\", \"High\", \"Critical\"];\n\n    if (maxSeverity.toLowerCase() == \"critical\") {\n      severityThreshold = 4;\n    } else if (maxSeverity.toLowerCase() == \"high\") {\n      severityThreshold = 3;\n    } else if (maxSeverity.toLowerCase() == \"moderate\") {\n      severityThreshold = 2;\n    } else if (maxSeverity.toLowerCase() == \"low\") {\n      severityThreshold = 1;\n    }\n\n    let grouped = results.designGaps.reduce(\n      (result: any, currentValue: DesignGap) => {\n        (result[severityMap[currentValue.severity]] =\n          result[severityMap[currentValue.severity]] || []).push(currentValue);\n        return result;\n      },\n      {},\n    );\n\n    core.info(\n      \"------------------------------------------------------------------\",\n    );\n    core.info(\n      ` \\u001B[31mCritical: ${grouped[\"Critical\"]?.length ?? 0} High: ${grouped[\"High\"]?.length ?? 0} Moderate: ${grouped[\"Moderate\"]?.length ?? 0} Low: ${grouped[\"Low\"]?.length ?? 0} `,\n    );\n    core.info(\n      \"------------------------------------------------------------------\",\n    );\n\n    let actionResult = true;\n    if (severityThreshold != 0) {\n      severityMap.forEach((_, index) => {\n        if (\n          index >= severityThreshold &&\n          grouped[severityMap[index] ?? 0]?.length > 0\n        ) {\n          actionResult = false;\n        }\n      });\n    }\n\n    return actionResult;\n  }\n}\n"]}