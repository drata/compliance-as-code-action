{"version":3,"file":"api.js","sourceRoot":"","sources":["../../src/apis/api.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionConfig } from \"src/models/actionConfig\";\nimport { IacUploadDetails } from \"src/apis/models/iacUploadDetails\";\nimport axios from \"axios\";\nimport * as core from \"@actions/core\";\nimport { request } from \"http\";\nimport fs = require(\"fs\");\nimport { PipelineInfo } from \"@src/models/pipelineInfo\";\nimport { PostPipelinesScanRequest } from \"./models/postPipelineScanRequest\";\nimport { PipelineResults } from \"./models/pipelineResults\";\n\nexport class Api {\n  private ApiBaseUrl: string = \"\";\n  private config: ActionConfig | undefined;\n\n  public constructor(actionConfig: ActionConfig) {\n    this.config = actionConfig;\n    this.ApiBaseUrl = this.buildApiUrl(\n      this.config.region.toLowerCase(),\n      this.config.environment,\n    );\n  }\n\n  public async getClientUploadStorageDetails(): Promise<IacUploadDetails> {\n    core.info(\"Getting storage details\");\n    return new Promise((resolve, reject) => {\n      let repositoryName = (process.env.GITHUB_REPOSITORY || \"\")\n        .split(\"/\")\n        .pop();\n      let url = `${this.ApiBaseUrl}/public/workspaces/${this.config?.workspaceId}/pipelines/iac-upload-details?repositoryName=${repositoryName}&repositoryOwner=${process.env.GITHUB_REPOSITORY_OWNER}&branchName=${process.env.GITHUB_REF_NAME}&commitHash=${process.env.GITHUB_SHA}`;\n      let encodedUrl = encodeURI(url);\n      let partial = this.config?.apiKey.substring(0, 4);\n\n      axios\n        .get<IacUploadDetails>(encodedUrl, {\n          headers: {\n            Authorization: `Bearer ${this.config?.apiKey}`,\n          },\n        })\n        .then((res) => {\n          resolve(res.data);\n        })\n        .catch((error) => {\n          if (error.response.status === 401) {\n            reject(`\\u001B[31mThe api key is invalid or expired.`);\n          } else {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  public async uploadIaCToS3(uploadRequest: IacUploadDetails): Promise<void> {\n    try {\n      const fileStream = fs.createReadStream(uploadRequest.zipName);\n      const fileStats = fs.statSync(uploadRequest.zipName);\n\n      // core.info(\n      //   `uploading files: ${uploadRequest.bucketName} + ${uploadRequest.objectKey}`\n      // )\n\n      // core.info(`url: ${uploadRequest.presignedUrl}`)\n\n      // core.info(`filestats: ${fileStats.size.toString()}`)\n\n      let formData = new FormData();\n      formData.append(\"terraform.zip\", uploadRequest.zipName);\n\n      return new Promise<void>((resolve, reject) => {\n        axios\n          .put(uploadRequest.presignedUrl, fileStream, {\n            headers: {\n              \"Content-Type\": \"application/zip\",\n              \"Content-Length\": `${fileStats.size.toString()}`,\n            },\n            maxRedirects: 0,\n            onUploadProgress: function (progressEvent) {\n              core.info(` File upload in progress...`);\n            },\n          })\n          .then((res) => {\n            resolve(res.data);\n          })\n          .catch((error) => {\n            if (\n              error.response.status === 401 ||\n              error.response.status === 403\n            ) {\n              core.info(`\\u001B[31mThe api key is invalid or expired.`);\n              resolve();\n            } else {\n              reject(error);\n            }\n          });\n      });\n    } catch (error) {\n      console.error(\"Error uploading IaC files to Drata:\", error);\n    }\n  }\n\n  public async postIaCScanValidation(\n    iacScanRequest: PostPipelinesScanRequest,\n  ): Promise<any> {\n    let url = `${this.ApiBaseUrl}/public/workspaces/${this.config?.workspaceId}/pipelines/iac-scan`;\n\n    core.info(`Starting scan with id: ${iacScanRequest.runId}`);\n    return new Promise<any>((resolve, reject) => {\n      axios\n        .post(url, iacScanRequest, {\n          headers: {\n            Authorization: `Bearer ${this.config?.apiKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          resolve(res.data);\n        })\n        .catch((error) => {\n          if (error.response.status === 401 || error.response.status === 403) {\n            core.info(`\\u001B[31mThe api key is invalid or expired.`);\n            resolve({});\n          } else {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  public async checkForResults(runId: string): Promise<PipelineResults> {\n    let url = `${this.ApiBaseUrl}/public/workspaces/${this.config?.workspaceId}/pipelines/results?runId=${runId}`;\n    return new Promise<PipelineResults>((resolve, reject) => {\n      axios\n        .get(url, {\n          headers: {\n            Authorization: `Bearer ${this.config?.apiKey}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((res) => {\n          resolve(res.data);\n        })\n        .catch((error) => {\n          core.info(error);\n          if (error.response.status === 404) {\n            resolve({ designGaps: [] });\n          } else {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  private buildApiUrl(region: string, environment: string): string {\n    let environmentMap: Map<string, string> = new Map<string, string>();\n    environmentMap.set(\"app-04\", \"public-api-04.dev\");\n    environmentMap.set(\"production\", \"public-api\");\n    environmentMap.set(\"qa\", \"public-api.qa\");\n\n    if (region === \"eu\") {\n      return `https://${environmentMap.get(environment)}.eu.drata.com`;\n    }\n\n    return `https://${environmentMap.get(environment)}.drata.com`;\n  }\n}\n"]}