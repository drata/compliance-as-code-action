{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import * as core from \"@actions/core\";\nimport { Configuration } from \"./utils/configuration\";\nimport { stat } from \"fs\";\nimport { ActionService } from \"./services/actionService\";\nimport { FileService } from \"./services/fileService\";\nimport { PipelineInfo } from \"./models/pipelineInfo\";\nimport { Pipe, pipeline } from \"stream\";\nimport { v4 as uuid4 } from \"uuid\";\n\n/**\n * The main function for the action.\n * @returns {Promise<void>} Resolves when the action is complete.\n */\nexport async function run(): Promise<void> {\n  try {\n    let config = new Configuration();\n    let status = config.checkIfActionIsConfiguredCorrectly();\n    if (!status.isValid) {\n      core.setFailed(status.message);\n    }\n\n    core.info(\n      ` Running action on repository: ${process.env.GITHUB_REPOSITORY} for branch ${process.env.GITHUB_REF_NAME}`,\n    );\n\n    if (config.configParams?.apiKey === \"undefined\") {\n      core.info(\n        \"Api key is undefined \" + config.configParams.apiKey.substring(0, 4),\n      );\n    }\n\n    const pipelineInfo: PipelineInfo = getPipelineMetadata(config);\n    const action = new ActionService(config.configParams!);\n    const response = await (\n      await action.prepare()\n    ).queueValidation(pipelineInfo);\n\n    let results = await action.checkIfResultsAreAvailable(\n      config.configParams!.timeoutSeconds,\n      pipelineInfo.runId,\n    );\n    let actionResult = action.publishResults(\n      config.configParams?.maxSeverity || \"\",\n      results,\n    );\n\n    if (actionResult == false) {\n      core.setFailed(\n        `Drata Compliance as Code action failed. There are issues found with severity:${config.configParams?.maxSeverity}`,\n      );\n    } else {\n      core.info(\"Drata Compliance as Code passed with issues found.\");\n    }\n  } catch (error: any) {\n    core.setFailed(error?.message ?? error);\n  }\n}\n\nfunction getPipelineMetadata(config: Configuration): PipelineInfo {\n  let runId = uuid4();\n  let repoPath = process.env.GITHUB_REPOSITORY ?? \"\";\n  let repoTokens = repoPath.split(\"/\");\n  let repoName = repoTokens[repoTokens.length - 1];\n  let sourceBranch = process.env.GITHUB_REF_NAME ?? \"\";\n\n  let repoRef = process.env.GITHUB_REF || \"\";\n  let triggerRefTokens = repoRef.split(\"/\");\n  let trigger = triggerRefTokens[1];\n\n  let pipelineInfo: PipelineInfo = {\n    branchName: sourceBranch,\n    repositoryName: repoName,\n    repositoryId: process.env.GITHUB_REPOSITORY_ID || \"\",\n    commitHash: process.env.GITHUB_SHA ?? \"\",\n    repositoryOwner: process.env.GITHUB_REPOSITORY_OWNER ?? \"\",\n    runId: runId,\n    vendorRunId: process.env.GITHUB_RUN_ID || \"\",\n    sourceBranchName: sourceBranch,\n    destinationBranchName: process.env.GITHUB_BASE_REF || sourceBranch,\n    runInitiatedBy: process.env.GITHUB_ACTOR || \"\",\n    trigger: trigger,\n    minimumSeverity: config.configParams?.maxSeverity || \"\",\n  };\n\n  return pipelineInfo;\n}\n"]}